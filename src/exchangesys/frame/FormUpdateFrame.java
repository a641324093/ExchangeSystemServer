package exchangesys.frame;

import exchange.db.DBCat;
import exchange.db.DBConnect;
import exchange.db.DBForm;
import exchange.db.DBItem;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import tansfer.TransferClient;
import tansfer.TransferServer;
import utils.FileUtils;
import utils.MyFileFilter;
import utils.StringUtils;

/**
 *
 * @author myy
 */
public class FormUpdateFrame extends javax.swing.JFrame {

    public static final String IMG_SAVE_PATH = "./img/";
    public static final String IMG_TEMP_PATH = "C:/Temp/ExSystem/";
    //当为添加新表单时提交的id
    public static final int NEWFORM_ID = -1;

    private int form_id, user_id;
    public String img_path;

    public FormUpdateFrame(int form_id, int user_id) {
        try {
            this.user_id = user_id;
            this.form_id = form_id;
            initComponents();
            this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            init();
        } catch (Exception ex) {
            Logger.getLogger(FormUpdateFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void init() throws Exception {
        //缓存文件夹不存在
        String test_path = IMG_TEMP_PATH+"1.txt";
        if(new File(test_path).exists()==false)
        {
            FileUtils.creatFile(test_path);
        }
        Connection conn = DBConnect.getConnection();
        //种类信息
        DBCat.showCatInCB(conn, cb_cat);
        if (form_id != FormUpdateFrame.NEWFORM_ID) {
            DBForm.showFormInFrame(conn, this, form_id);
        }
        DBConnect.closeDB(conn);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_formdesc = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lab_img = new javax.swing.JLabel();
        but_img = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_itemdesc = new javax.swing.JTextArea();
        but_submit = new javax.swing.JButton();
        tf_title = new javax.swing.JTextField();
        tf_item_name = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cb_cat = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("易物宝提交");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 24)); // NOI18N
        jLabel1.setText("交换单提交页面");

        jLabel2.setText("标题：");

        jLabel3.setText("交换描述：");

        ta_formdesc.setColumns(20);
        ta_formdesc.setLineWrap(true);
        ta_formdesc.setRows(5);
        ta_formdesc.setWrapStyleWord(true);
        jScrollPane1.setViewportView(ta_formdesc);

        jLabel4.setText("物品名：");

        jLabel5.setText("物品图片：");

        lab_img.setText("物品图片");

        but_img.setText("上传图片");
        but_img.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_imgActionPerformed(evt);
            }
        });

        jLabel7.setText("物品描述：");

        ta_itemdesc.setColumns(20);
        ta_itemdesc.setLineWrap(true);
        ta_itemdesc.setRows(5);
        ta_itemdesc.setWrapStyleWord(true);
        jScrollPane2.setViewportView(ta_itemdesc);

        but_submit.setText("提交");
        but_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_submitActionPerformed(evt);
            }
        });

        jLabel8.setText("种类：");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_title, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_item_name, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 134, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lab_img, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(but_img))
                                    .addComponent(cb_cat, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(but_submit)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tf_item_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(cb_cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(but_img)
                        .addComponent(lab_img, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(but_submit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_imgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_imgActionPerformed
        try {
//            String src_path = FileUtils.getSavePath(null);
            String ends_str[] = new String[3];
            ends_str[0]="jpg";
            ends_str[1]="png";
            ends_str[2]="gif";
            MyFileFilter filter = new MyFileFilter(ends_str, "图片");
            String src_path = FileUtils.getSavePath("请选择您要上传的图片",filter);
            if(StringUtils.isEmptyOrNull(src_path))
            {
                return;
            }
            //获得文件名，并设置目的路径
            File file = new File(src_path);
            String file_name = file.getName();
            String des_path = IMG_TEMP_PATH+file_name;
            //传输线程启动
            TransferServer server = new TransferServer(src_path);
            TransferClient client = new TransferClient(des_path);
            server.start();
            client.start();
            while(server.isAlive())
            {
                //传输完成再执行
                Thread.sleep(1000);
//                System.out.println("wait");
            }
            ImageIcon image = new ImageIcon(des_path);
            int width = lab_img.getWidth();
            int height = lab_img.getHeight();
            //缩略图
            image.setImage(image.getImage().getScaledInstance(width, height, Image.SCALE_DEFAULT));
            lab_img.setIcon(image);
            img_path = des_path;
        } catch (Exception ex) {
            Logger.getLogger(FormUpdateFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"上传图片出错！\n"+ex);
            return;
        }
        JOptionPane.showMessageDialog(this, "上传成功！");
    }//GEN-LAST:event_but_imgActionPerformed

    private void but_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_submitActionPerformed

        try {
            String title = tf_title.getText().trim();
            String item_name = tf_item_name.getText().trim();
            String form_desc = ta_formdesc.getText().trim();
            String item_desc = ta_itemdesc.getText().trim();
            String img_path = this.img_path;
            String cat_name = cb_cat.getSelectedItem().toString();
            if (StringUtils.isEmptyOrNull(title) || StringUtils.isEmptyOrNull(item_name) || StringUtils.isEmptyOrNull(form_desc)
                    || StringUtils.isEmptyOrNull(item_desc) || StringUtils.isEmptyOrNull(img_path)) {
                JOptionPane.showMessageDialog(this, "请将信息补充完整！");;
                return;
            }
            //长度限制
            if(item_name.length()>=15)
            {
                JOptionPane.showMessageDialog(this, "物品名称不能多于15个字符！");;
                return;
            }
            if(item_desc.length()>=280)
            {
                JOptionPane.showMessageDialog(this, "物品描述不能多于280个字符！");;
                return;
            }
            if(form_desc.length()>=280)
            {
                JOptionPane.showMessageDialog(this, "表单描述不能多于280个字符！");;
                return;
            }
            if(title.length()>=40)
            {
                JOptionPane.showMessageDialog(this, "标题不能多于40个字符！");;
                return;
            }
            
            //将temp文件复制到保存文件夹
            File file_img = new File(img_path);
            String file_name = file_img.getName();
            String des_path = IMG_SAVE_PATH+file_name;
            while(new File(des_path).exists())
            {
                System.out.println(".");
                //若有重名文件则新建一个文件
               String []strs = file_name.split("\\.");
                //获得无后缀文件名
               String fre_name = strs[strs.length-2];
               //获得后缀名
               String end_name = strs[strs.length-1];
               fre_name=fre_name+"(1)";
               file_name=fre_name+"."+end_name;
               des_path=IMG_SAVE_PATH+file_name;
            }
            
            FileUtils.copyFile(des_path,img_path);
            
            Connection conn = DBConnect.getConnection();
            int cat_id = DBCat.getIdByCatName(conn, cat_name);
            if (cat_id == -1) {
                JOptionPane.showMessageDialog(this, "种类信息获取失败！");;
                return;
            }
            int update_form_id;
            if (form_id == FormUpdateFrame.NEWFORM_ID) {
                long cur_time =System.currentTimeMillis();
                SimpleDateFormat sdf = new SimpleDateFormat(ItemShowFrame.DATE_FORMAT);
                String msg_time = sdf.format(new Date(cur_time));
               update_form_id = DBForm.addForm(conn, title, item_name, form_desc, item_desc, user_id,cat_id, des_path,msg_time);
            } else {
                ResultSet rs = DBForm.getFormById(conn, form_id);
                int item_id = -1;
                while (rs.next()) {
                    item_id = rs.getInt("item_id");
                }
                if (item_id == -1) {
                    JOptionPane.showMessageDialog(this, "提交失败！");
                    return;
                }
                DBItem.updateItem(conn, item_name, item_desc, des_path, item_id,cat_id);
                update_form_id = DBForm.updateForm(conn, title, form_desc, form_id);
            }
            if (update_form_id == -1) {
                JOptionPane.showMessageDialog(this, "提交失败！");
                return;
            }
            DBConnect.closeDB(conn);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            Logger.getLogger(FormUpdateFrame.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        JOptionPane.showMessageDialog(this, "提交成功！");
        this.dispose();

    }//GEN-LAST:event_but_submitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        ;
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton but_img;
    private javax.swing.JButton but_submit;
    public javax.swing.JComboBox cb_cat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JLabel lab_img;
    public javax.swing.JTextArea ta_formdesc;
    public javax.swing.JTextArea ta_itemdesc;
    public javax.swing.JTextField tf_item_name;
    public javax.swing.JTextField tf_title;
    // End of variables declaration//GEN-END:variables
}
