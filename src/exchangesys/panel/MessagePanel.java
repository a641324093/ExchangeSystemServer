/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exchangesys.panel;

import exchange.db.DBComment;
import exchange.db.DBConnect;
import exchange.db.DBMessage;
import exchange.db.DBUser;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import utils.StringUtils;

/**
 *
 * @author myy
 */
public class MessagePanel extends javax.swing.JPanel {

    public static final String DATE_FORMAT = "yyyy-MM-dd H:mm:ss";
    public static final int width = 207, height = 240;
    private boolean is_form_owner = false, is_master = false, is_msger = false;
    private int user_id, form_id, msg_id;
//    private ResultSet rs_msg;

    public MessagePanel(JComponent par, int form_id, int user_id, int msg_id, boolean is_form_owner, boolean is_master) {
        this.msg_id = msg_id;
        this.form_id = form_id;
        this.user_id = user_id;
        this.is_master = is_master;
        this.is_form_owner = is_form_owner;
        try {
            initComponents();
            this.setSize(width, height);
            init(par);
        } catch (Exception ex) {
            Logger.getLogger(MessagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void init(JComponent par) throws Exception {
        //设置宽高
        this.setSize(par.getWidth() - 10, this.getHeight());

        //数据库操作
        Connection conn = DBConnect.getConnection();
        //显示留言
        DBMessage.showMsgInPanel(conn, this, msg_id);
        //显示评论
        ResultSet com_rs = DBComment.selectCommentByFormIdAndMsgId(conn, form_id, msg_id);
        DBComment.showComsInPanel(conn, this, com_rs);

        is_msger = DBUser.isOwnerOfMessage(conn, user_id, msg_id);
        DBConnect.closeDB(conn);
        //设置权限
        if (is_form_owner == true) {
            but_reply.setEnabled(true);
            but_reply.setVisible(true);
            tf_reply.setEnabled(true);
            tf_reply.setVisible(true);
            but_dle.setVisible(false);
        }
        if (is_master == true) {
            but_dle.setEnabled(true);
            but_dle.setVisible(true);
            but_reply.setVisible(false);
            tf_reply.setVisible(false);
        }
        if (is_msger == true) {
            but_dle.setEnabled(true);
            but_dle.setVisible(true);
            but_reply.setEnabled(true);
            but_reply.setVisible(true);
            but_reply.setText("追加留言");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lan_peo = new javax.swing.JLabel();
        lan_contact = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_content = new javax.swing.JTextArea();
        but_reply = new javax.swing.JButton();
        but_dle = new javax.swing.JButton();
        tf_reply = new javax.swing.JTextField();

        jLabel5.setText("jLabel5");

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 153, 255), 2, true));

        jLabel1.setFont(new java.awt.Font("微软雅黑 Light", 0, 14)); // NOI18N
        jLabel1.setText("留言人：");

        lan_peo.setFont(new java.awt.Font("微软雅黑 Light", 0, 14)); // NOI18N
        lan_peo.setText("留言人");

        lan_contact.setFont(new java.awt.Font("微软雅黑 Light", 0, 12)); // NOI18N
        lan_contact.setText("联系方式");

        ta_content.setEditable(false);
        ta_content.setColumns(20);
        ta_content.setLineWrap(true);
        ta_content.setRows(5);
        ta_content.setWrapStyleWord(true);
        jScrollPane1.setViewportView(ta_content);

        but_reply.setText("回复留言");
        //but_reply.setVisible(false);
        but_reply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_replyActionPerformed(evt);
            }
        });
        but_reply.setVisible(false);

        but_dle.setText("删除留言");
        //but_dle.setVisible(false);
        but_dle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_dleActionPerformed(evt);
            }
        });
        but_dle.setVisible(false);

        tf_reply.setText("追加留言");
        //tf_content.setVisible(false);
        tf_reply.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_replyFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lan_peo)
                .addGap(0, 98, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(but_reply)
                        .addGap(18, 18, 18)
                        .addComponent(but_dle))
                    .addComponent(tf_reply)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lan_contact)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lan_peo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_reply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lan_contact)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_reply)
                    .addComponent(but_dle)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void but_dleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_dleActionPerformed
        if (JOptionPane.showConfirmDialog(null, "确认删除?", "删除确认", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                Connection conn = DBConnect.getConnection();
                DBMessage.delMsgById(conn, msg_id);
//            DBMessage.delMsgByResult(conn,rs_msg);
                DBConnect.closeDB(conn);
            } catch (Exception ex) {
                Logger.getLogger(MessagePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "留言删除成功!");
        }
    }//GEN-LAST:event_but_dleActionPerformed

    private void tf_replyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_replyFocusGained
        tf_reply.setText("");
    }//GEN-LAST:event_tf_replyFocusGained

    private void but_replyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_replyActionPerformed
        try {
            Connection conn = DBConnect.getConnection();
            String comment = tf_reply.getText();
            if (StringUtils.isEmptyOrNull(comment)) {
                JOptionPane.showMessageDialog(null, "留言内容不能为空！");
                return;
            }
            Date cur_time = new Date(System.currentTimeMillis());
            SimpleDateFormat sdf = new SimpleDateFormat(MessagePanel.DATE_FORMAT);
            String str_time = sdf.format(cur_time);
            DBComment.addComment(conn, comment, form_id, user_id, str_time, msg_id);
            DBConnect.closeDB(conn);
        } catch (Exception ex) {
            Logger.getLogger(MessagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "评论成功！");
    }//GEN-LAST:event_but_replyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_dle;
    private javax.swing.JButton but_reply;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lan_contact;
    public javax.swing.JLabel lan_peo;
    public javax.swing.JTextArea ta_content;
    private javax.swing.JTextField tf_reply;
    // End of variables declaration//GEN-END:variables
}
